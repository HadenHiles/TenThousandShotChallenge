// Mocks generated by Mockito 5.4.6 from annotations
// in tenthousandshotchallenge/test/widgets/shots_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;
import 'dart:ui' as _i3;

import 'package:flutter/material.dart' as _i6;
import 'package:flutter/src/animation/curves.dart' as _i7;
import 'package:mockito/mockito.dart' as _i1;
import 'package:sliding_up_panel/src/panel.dart' as _i4;
import 'package:tenthousandshotchallenge/services/session.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeDuration_0 extends _i1.SmartFake implements Duration {
  _FakeDuration_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [SessionService].
///
/// See the documentation for Mockito's code generation for more information.
class MockSessionService extends _i1.Mock implements _i2.SessionService {
  MockSessionService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  Duration get currentDuration => (super.noSuchMethod(
        Invocation.getter(#currentDuration),
        returnValue: _FakeDuration_0(
          this,
          Invocation.getter(#currentDuration),
        ),
      ) as Duration);

  @override
  bool get isRunning => (super.noSuchMethod(
        Invocation.getter(#isRunning),
        returnValue: false,
      ) as bool);

  @override
  bool get isPaused => (super.noSuchMethod(
        Invocation.getter(#isPaused),
        returnValue: false,
      ) as bool);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  void start() => super.noSuchMethod(
        Invocation.method(
          #start,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void resume() => super.noSuchMethod(
        Invocation.method(
          #resume,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void pause() => super.noSuchMethod(
        Invocation.method(
          #pause,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void stop() => super.noSuchMethod(
        Invocation.method(
          #stop,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void reset() => super.noSuchMethod(
        Invocation.method(
          #reset,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addListener(_i3.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i3.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [PanelController].
///
/// See the documentation for Mockito's code generation for more information.
class MockPanelController extends _i1.Mock implements _i4.PanelController {
  MockPanelController() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get isAttached => (super.noSuchMethod(
        Invocation.getter(#isAttached),
        returnValue: false,
      ) as bool);

  @override
  double get panelPosition => (super.noSuchMethod(
        Invocation.getter(#panelPosition),
        returnValue: 0.0,
      ) as double);

  @override
  bool get isPanelAnimating => (super.noSuchMethod(
        Invocation.getter(#isPanelAnimating),
        returnValue: false,
      ) as bool);

  @override
  bool get isPanelOpen => (super.noSuchMethod(
        Invocation.getter(#isPanelOpen),
        returnValue: false,
      ) as bool);

  @override
  bool get isPanelClosed => (super.noSuchMethod(
        Invocation.getter(#isPanelClosed),
        returnValue: false,
      ) as bool);

  @override
  bool get isPanelShown => (super.noSuchMethod(
        Invocation.getter(#isPanelShown),
        returnValue: false,
      ) as bool);

  @override
  set panelPosition(double? value) => super.noSuchMethod(
        Invocation.setter(
          #panelPosition,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> open() => (super.noSuchMethod(
        Invocation.method(
          #open,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> hide() => (super.noSuchMethod(
        Invocation.method(
          #hide,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> show() => (super.noSuchMethod(
        Invocation.method(
          #show,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> animatePanelToPosition(
    double? value, {
    Duration? duration,
    _i6.Curve? curve = _i7.Curves.linear,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #animatePanelToPosition,
          [value],
          {
            #duration: duration,
            #curve: curve,
          },
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> animatePanelToSnapPoint({
    Duration? duration,
    _i6.Curve? curve = _i7.Curves.linear,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #animatePanelToSnapPoint,
          [],
          {
            #duration: duration,
            #curve: curve,
          },
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
}
